{"ast":null,"code":"var _jsxFileName = \"/home/stasiek/kursFullstack/part1/src/components/Course.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Course = _ref => {\n  let {\n    course\n  } = _ref;\n  console.log({\n    course\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = Course;\nconst Header = _ref2 => {\n  let {\n    course\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 32\n  }, this);\n};\n_c2 = Header;\nconst Part = _ref3 => {\n  let {\n    name,\n    exercises\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [name, \" \", exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 39\n  }, this);\n};\n_c3 = Part;\nconst Content = _ref4 => {\n  let {\n    parts\n  } = _ref4;\n  return parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n    name: part.name,\n    exercises: part.exercises\n  }, part.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this));\n};\n_c4 = Content;\nconst Total = _ref5 => {\n  let {\n    parts\n  } = _ref5;\n  console.log({\n    parts\n  });\n  const total = parts.reduce((sum, part) => sum + part.exercises, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"total of \", total, \" exercises\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c5 = Total;\nexport default Course;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Course\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Part\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"Total\");","map":{"version":3,"names":["Course","course","console","log","name","parts","Header","Part","exercises","Content","map","part","id","Total","total","reduce","sum"],"sources":["/home/stasiek/kursFullstack/part1/src/components/Course.js"],"sourcesContent":["const Course = ({course}) => {\n    console.log({course})\n    return (\n      <>\n        <Header course = {course.name}/>\n        <Content parts = {course.parts}/>\n        <Total parts = {course.parts}/>\n      </>\n    )\n  }\n  const Header = ({course}) => <h2>{course}</h2>\n  \n  const Part = ({name, exercises}) => <p>{name} {exercises}</p>\n  \n  const Content = ({parts}) => parts.map(part => \n    <Part key={part.id} name={part.name} exercises={part.exercises} />)\n  \n  const Total = ({parts}) => {\n    console.log({parts})\n    const total = parts.reduce((sum, part) => sum + part.exercises, 0)\n  \n    return (\n      <>\n        <p><b>total of {total} exercises</b></p>\n      </>\n    )\n  }\n\n  export default Course"],"mappings":";;;AAAA,MAAMA,MAAM,GAAG,QAAc;EAAA,IAAb;IAACC;EAAM,CAAC;EACpBC,OAAO,CAACC,GAAG,CAAC;IAACF;EAAM,CAAC,CAAC;EACrB,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,MAAM,EAAIA,MAAM,CAACG;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eAChC,QAAC,OAAO;MAAC,KAAK,EAAIH,MAAM,CAACI;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACjC,QAAC,KAAK;MAAC,KAAK,EAAIJ,MAAM,CAACI;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBAC9B;AAEP,CAAC;AAAA,KATGL,MAAM;AAUV,MAAMM,MAAM,GAAG;EAAA,IAAC;IAACL;EAAM,CAAC;EAAA,oBAAK;IAAA,UAAKA;EAAM;IAAA;IAAA;IAAA;EAAA,QAAM;AAAA;AAAA,MAAxCK,MAAM;AAEZ,MAAMC,IAAI,GAAG;EAAA,IAAC;IAACH,IAAI;IAAEI;EAAS,CAAC;EAAA,oBAAK;IAAA,WAAIJ,IAAI,EAAC,GAAC,EAACI,SAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAAK;AAAA;AAAA,MAAvDD,IAAI;AAEV,MAAME,OAAO,GAAG;EAAA,IAAC;IAACJ;EAAK,CAAC;EAAA,OAAKA,KAAK,CAACK,GAAG,CAACC,IAAI,iBACzC,QAAC,IAAI;IAAe,IAAI,EAAEA,IAAI,CAACP,IAAK;IAAC,SAAS,EAAEO,IAAI,CAACH;EAAU,GAApDG,IAAI,CAACC,EAAE;IAAA;IAAA;IAAA;EAAA,QAAgD,CAAC;AAAA;AAAA,MAD/DH,OAAO;AAGb,MAAMI,KAAK,GAAG,SAAa;EAAA,IAAZ;IAACR;EAAK,CAAC;EACpBH,OAAO,CAACC,GAAG,CAAC;IAACE;EAAK,CAAC,CAAC;EACpB,MAAMS,KAAK,GAAGT,KAAK,CAACU,MAAM,CAAC,CAACC,GAAG,EAAEL,IAAI,KAAKK,GAAG,GAAGL,IAAI,CAACH,SAAS,EAAE,CAAC,CAAC;EAElE,oBACE;IAAA,uBACE;MAAA,uBAAG;QAAA,WAAG,WAAS,EAACM,KAAK,EAAC,YAAU;MAAA;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA;EAAI,iBACvC;AAEP,CAAC;AAAA,MATKD,KAAK;AAWX,eAAeb,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}