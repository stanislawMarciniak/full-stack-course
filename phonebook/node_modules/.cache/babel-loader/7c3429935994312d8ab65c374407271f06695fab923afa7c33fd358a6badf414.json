{"ast":null,"code":"var _jsxFileName = \"/home/stasiek/kursFullstack/part1/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Name from \"./components/Name\";\nimport Add from \"./components/Add\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\nimport personService from \"./services/persons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([]);\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  useEffect(() => {\n    console.log(\"effect\");\n    personService.getAll().then(persons => {\n      setPersons(persons);\n    });\n  }, []);\n  console.log(\"render\", persons.length, \"persons\");\n  const handleFilterChange = event => setNewFilter(event.target.value);\n  const filteredPersons = persons.filter(person => {\n    return person.name.toLowerCase().includes(newFilter.toLowerCase());\n  });\n  const togglePersonDelete = id => {\n    const deletedPerson = persons.find(person => person.id === id);\n    if (window.confirm(`Delete ${deletedPerson.name} ?`)) personService.deletePerson(id).then(() => {\n      setPersons(persons.filter(returnedPerson => returnedPerson.id !== id));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n      console.log(\"deleted\", persons);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: notificationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      newFilter: newFilter,\n      handleFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Add, {\n      persons: persons,\n      setPersons: setPersons,\n      setNotificationMessage: setNotificationMessage\n    }, persons.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Name, {\n      filteredPersons: filteredPersons,\n      togglePersonDelete: togglePersonDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"j1rTjp1oW+CCUOAIS0XMe1pA1XQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Name","Add","Filter","Notification","personService","App","persons","setPersons","newFilter","setNewFilter","notificationMessage","setNotificationMessage","console","log","getAll","then","length","handleFilterChange","event","target","value","filteredPersons","filter","person","name","toLowerCase","includes","togglePersonDelete","id","deletedPerson","find","window","confirm","deletePerson","returnedPerson","catch","error","setErrorMessage","note","content","setTimeout","setNotes","notes","n"],"sources":["/home/stasiek/kursFullstack/part1/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport Name from \"./components/Name\";\nimport Add from \"./components/Add\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\n\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n\n  useEffect(() => {\n    console.log(\"effect\");\n    personService.getAll().then((persons) => {\n      setPersons(persons);\n    });\n  }, []);\n  console.log(\"render\", persons.length, \"persons\");\n\n  const handleFilterChange = (event) => setNewFilter(event.target.value);\n\n  const filteredPersons = persons.filter((person) => {\n    return person.name.toLowerCase().includes(newFilter.toLowerCase());\n  });\n\n  const togglePersonDelete = (id) => {\n    const deletedPerson = persons.find((person) => person.id === id);\n    if (window.confirm(`Delete ${deletedPerson.name} ?`))\n      personService\n        .deletePerson(id)\n        .then(() => {\n          setPersons(\n            persons.filter((returnedPerson) => returnedPerson.id !== id)\n          );\n        })\n        .catch((error) => {\n          setErrorMessage(\n            `Note '${note.content}' was already removed from server`\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n          setNotes(notes.filter((n) => n.id !== id));\n          console.log(\"deleted\", persons);\n        });\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <Add\n        key={persons.id}\n        persons={persons}\n        setPersons={setPersons}\n        setNotificationMessage={setNotificationMessage}\n      />\n      <Name\n        filteredPersons={filteredPersons}\n        togglePersonDelete={togglePersonDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,OAAOC,aAAa,MAAM,oBAAoB;AAAC;AAE/C,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpEC,SAAS,CAAC,MAAM;IACda,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBT,aAAa,CAACU,MAAM,EAAE,CAACC,IAAI,CAAET,OAAO,IAAK;MACvCC,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACNM,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEP,OAAO,CAACU,MAAM,EAAE,SAAS,CAAC;EAEhD,MAAMC,kBAAkB,GAAIC,KAAK,IAAKT,YAAY,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAEtE,MAAMC,eAAe,GAAGf,OAAO,CAACgB,MAAM,CAAEC,MAAM,IAAK;IACjD,OAAOA,MAAM,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAClB,SAAS,CAACiB,WAAW,EAAE,CAAC;EACpE,CAAC,CAAC;EAEF,MAAME,kBAAkB,GAAIC,EAAE,IAAK;IACjC,MAAMC,aAAa,GAAGvB,OAAO,CAACwB,IAAI,CAAEP,MAAM,IAAKA,MAAM,CAACK,EAAE,KAAKA,EAAE,CAAC;IAChE,IAAIG,MAAM,CAACC,OAAO,CAAE,UAASH,aAAa,CAACL,IAAK,IAAG,CAAC,EAClDpB,aAAa,CACV6B,YAAY,CAACL,EAAE,CAAC,CAChBb,IAAI,CAAC,MAAM;MACVR,UAAU,CACRD,OAAO,CAACgB,MAAM,CAAEY,cAAc,IAAKA,cAAc,CAACN,EAAE,KAAKA,EAAE,CAAC,CAC7D;IACH,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBC,eAAe,CACZ,SAAQC,IAAI,CAACC,OAAQ,mCAAkC,CACzD;MACDC,UAAU,CAAC,MAAM;QACfH,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;MACRI,QAAQ,CAACC,KAAK,CAACpB,MAAM,CAAEqB,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKA,EAAE,CAAC,CAAC;MAC1ChB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEP,OAAO,CAAC;IACjC,CAAC,CAAC;EACR,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,YAAY;MAAC,OAAO,EAAEI;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC9C,QAAC,MAAM;MAAC,SAAS,EAAEF,SAAU;MAAC,kBAAkB,EAAES;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAG,eACxE,QAAC,GAAG;MAEF,OAAO,EAAEX,OAAQ;MACjB,UAAU,EAAEC,UAAW;MACvB,sBAAsB,EAAEI;IAAuB,GAH1CL,OAAO,CAACsB,EAAE;MAAA;MAAA;MAAA;IAAA,QAIf,eACF,QAAC,IAAI;MACH,eAAe,EAAEP,eAAgB;MACjC,kBAAkB,EAAEM;IAAmB;MAAA;MAAA;MAAA;IAAA,QACvC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA1DItB,GAAG;AAAA,KAAHA,GAAG;AA4DT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}